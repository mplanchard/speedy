<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title>Matthew Planchard's Blog</title>
    <link rel="self" href="https://blog.mplanchard.com/atom.xml"/>
    <link href="https://blog.mplanchard.com/"/>
    <updated>2020-08-20T00:00:00+00:00</updated>
    <author>
        <name>Matthew Planchard</name>
    </author>
    <id>https://blog.mplanchard.com/</id>

    
<entry>
    <title>Why Are We So Eager to Break Things?</title>
    <link href="https://blog.mplanchard.com/posts/why-are-we-so-eager-to-break-things.html"/>
    <id>https://blog.mplanchard.com/posts/why-are-we-so-eager-to-break-things.html</id>
    <updated>2020-08-20T00:00:00+00:00</updated>
    <summary>An exploration of some of the ways we intentionally or unintentionally make extra work and churn for our colleagues, how we justify it to ourselves, and how we can avoid it.</summary>
</entry>

<entry>
    <title>Communication, Education, and Engineering</title>
    <link href="https://blog.mplanchard.com/posts/communication-education-and-engineering.html"/>
    <id>https://blog.mplanchard.com/posts/communication-education-and-engineering.html</id>
    <updated>2020-05-24T00:00:00+00:00</updated>
    <summary>Communication is fundamental to the success of an engineering organization, and communication as a core value must be actively promoted in order for the organization to be successful. Most of our necessary communication is either for purposes of learning or education, and it should be expected that leadership roles involve a substantial amount of educational communication. We must therefore be explicit in our expectations and hiring that good communication is just as important as technical ability. To ensure we can evaluate these expectations for current and future employees, we must codify what we mean by good communication and ensure that we take steps to share and enforce that vision.</summary>
</entry>

<entry>
    <title>Make and Makefiles are Awesome</title>
    <link href="https://blog.mplanchard.com/posts/make-and-makefiles-are-awesome.html"/>
    <id>https://blog.mplanchard.com/posts/make-and-makefiles-are-awesome.html</id>
    <updated>2020-05-16T00:00:00+00:00</updated>
    <summary>Make and its associated Makefiles have been around forever, and have gotten a bit of a bad rap due to people encountering and writing arcane, poorly documented examples. However, learning to use Make effectively can provide a significant benefit to modern software projects, enabling intelligent ordering and dependency management for common tasks that would be a nightmare to implement from scratch. In this article we'll cover the basics of Makefiles and how they can be useful in the context of a modern scripting language like JavaScript or Python.</summary>
</entry>

<entry>
    <title>Creating an RSS (Atom) Feed</title>
    <link href="https://blog.mplanchard.com/posts/creating-an-rss-feed.html"/>
    <id>https://blog.mplanchard.com/posts/creating-an-rss-feed.html</id>
    <updated>2019-07-30T00:00:00+00:00</updated>
    <summary>creating an RSS (Atom) feed from scratch</summary>
</entry>

<entry>
    <title>Adding Support for Tags: Part 4</title>
    <link href="https://blog.mplanchard.com/posts/adding-support-for-tags-4.html"/>
    <id>https://blog.mplanchard.com/posts/adding-support-for-tags-4.html</id>
    <updated>2019-07-16T00:00:00+00:00</updated>
    <summary>actually generating tag content</summary>
</entry>

<entry>
    <title>Adding Support for Tags: Part 3</title>
    <link href="https://blog.mplanchard.com/posts/adding-support-for-tags-3.html"/>
    <id>https://blog.mplanchard.com/posts/adding-support-for-tags-3.html</id>
    <updated>2019-07-04T00:00:00+00:00</updated>
    <summary>finishing up refactoring</summary>
</entry>

<entry>
    <title>Adding Support for Tags: Part 2</title>
    <link href="https://blog.mplanchard.com/posts/adding-support-for-tags-2.html"/>
    <id>https://blog.mplanchard.com/posts/adding-support-for-tags-2.html</id>
    <updated>2019-07-02T00:00:00+00:00</updated>
    <summary>collecting tags and posts into a nice HashMap</summary>
</entry>

<entry>
    <title>Adding Support for Tags: Part 1</title>
    <link href="https://blog.mplanchard.com/posts/adding-support-for-tags-1.html"/>
    <id>https://blog.mplanchard.com/posts/adding-support-for-tags-1.html</id>
    <updated>2019-07-01T00:00:00+00:00</updated>
    <summary>refactoring header parsing in preparation for tag support</summary>
</entry>

<entry>
    <title>Why Bother?</title>
    <link href="https://blog.mplanchard.com/posts/why-bother.html"/>
    <id>https://blog.mplanchard.com/posts/why-bother.html</id>
    <updated>2019-06-29T00:00:00+00:00</updated>
    <summary>Why bother having a custom blog at all?</summary>
</entry>

<entry>
    <title>Boil Water Notice - Tips and Tricks</title>
    <link href="https://blog.mplanchard.com/posts/boil-water-notice-tips-and-tricks.html"/>
    <id>https://blog.mplanchard.com/posts/boil-water-notice-tips-and-tricks.html</id>
    <updated>2018-10-22T00:00:00+00:00</updated>
    <summary>lessons from growing up on the Gulf Coast</summary>
</entry>

<entry>
    <title>Stacking Calls to pytest's Parametrize</title>
    <link href="https://blog.mplanchard.com/posts/stacking-calls-to-pytest-parametrize.html"/>
    <id>https://blog.mplanchard.com/posts/stacking-calls-to-pytest-parametrize.html</id>
    <updated>2018-02-17T00:00:00+00:00</updated>
    <summary>how to compose parametrizations for combinatoric testing</summary>
</entry>

<entry>
    <title>GCC on Fedora 12(!)</title>
    <link href="https://blog.mplanchard.com/posts/gcc-on-fedora-12.html"/>
    <id>https://blog.mplanchard.com/posts/gcc-on-fedora-12.html</id>
    <updated>2015-11-02T00:00:00+00:00</updated>
    <summary>getting a compiler to run on a very old system</summary>
</entry>


</feed>
